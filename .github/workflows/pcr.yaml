# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020-2024 Intel Corporation

name: Pre Code Review

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main
  schedule:
    - cron: "0 8 * * 1"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-operator-images:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    env:
      IMAGE_REGISTRY: localhost:5000
      VERSION: ${{ vars.IEO_VERSION }}
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Setup operator-sdk
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://github.com/operator-framework/operator-sdk/releases/download/v1.32.0/operator-sdk_linux_amd64"
          name: operator-sdk
          version: "v1.32.0"

      - name: Authenticate kustomize installation with GH token
        run: sed -E -i 's/(test -s .*\$\(LOCALBIN\).*\|) bash/\1 GITHUB_TOKEN=${{ github.token }} bash/' Makefile

      - name: Build operator images on ${{ github.ref }} branch
        run: make USE_HTTP=true NOCACHE=true TLS_VERIFY=false IMGTOOL=docker build_all push_all catalog-build catalog-push

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Authenticate kustomize installation with GH token
        run: sed -E -i 's/(test -s .*\$\(LOCALBIN\).*\|) bash/\1 GITHUB_TOKEN=${{ github.token }} bash/' Makefile

      - name: Run unit tests
        run: set -o pipefail ; make test | tee unit-test-report.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-results
          path: unit-test-report.txt

  golangci-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      checks: write
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: "--out-format tab -v"

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          format: gcc
          severity: warning

  hadolint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerfile:
          [
            "./Dockerfile",
            "./Dockerfile.daemon",
            "./Dockerfile.labeler",
            "./images/Dockerfile.FlowConfigDaemon",
          ]
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          ignore: DL3008,DL3059,DL3015,DL3041,DL3018
          dockerfile: ${{ matrix.dockerfile }}
