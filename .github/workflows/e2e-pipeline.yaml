# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020-2024 Intel Corporation

name: E2E Tests

on:
  pull_request:
    branches:
      - "main"
    types:
      - "opened"
  workflow_dispatch:
    inputs:
      target:
        type: choice
        required: true
        description: sn - single node
        options:
          - k8s
          - stx-sn
          - ocp
          - ocp-sn
      skip_list:
        type: string
        required: false
  schedule:
    - cron: "0 8 * * 1"

env:
  IMAGE_REGISTRY: ger-is-registry.caas.intel.com/cno/e2e-tests
  VERSION: 2.0.${{ github.run_number }}
  WEBSERVER: ger-is-registry.caas.intel.com/cno/e2e-tests/webserver:v1.0.0
  TESTS_REPO: tests-repo
  # default skip list for PR testing
  SKIP_LIST: "UFO"

  # Required for actions/setup-go on self-hosted runner
  HOME: /root

jobs:
  build-operator-images:
    runs-on: [self-hosted, linux]
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: intel-collab/applications.orchestration.operators.tests
          ref: main
          token: ${{ secrets.TESTS_REPO_PAT }}
          path: ${{ env.TESTS_REPO }}

      - name: 'Apply "imagePullPolicy: Always" patch'
        run: git apply -v ${{ env.TESTS_REPO }}/e2e-tests/intel-ethernet-operator/ci/0001-change-imagePullPolicy-to-always.patch

      - name: 'Apply "ice driver reload instead of reboot" testing patch'
        run: git apply -v ${{ env.TESTS_REPO }}/e2e-tests/intel-ethernet-operator/ci/0002-change-reboot-to-ice-reload.patch

      - name: Login to Intel Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.HARBOR_LOGIN }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Setup operator-sdk
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://github.com/operator-framework/operator-sdk/releases/download/v1.32.0/operator-sdk_linux_amd64"
          name: operator-sdk
          version: "v1.32.0"

      # Path is set to "./..." but that cause error when tests repo is cloned as subpath to operator repo
      - name: Update controller-gen paths
        run: sed -i '0,/^\(.*paths="\)\.\/\.\.\./s||\1\.\/apis\/...|' Makefile

      - name: Authenticate kustomize installation with GH token
        run: sed -E -i 's/(test -s .*\$\(LOCALBIN\).*\|) bash/\1 GITHUB_TOKEN=${{ github.token }} bash/' Makefile

      - name: Build operator images on ${{ github.ref }} branch
        run: make TLS_VERIFY=true IMGTOOL=docker NOCACHE=true build_all push_all catalog-build catalog-push

  test-k8s:
    runs-on: [self-hosted, linux]
    concurrency:
      group: k8s-e2e
      cancel-in-progress: false
    needs: build-operator-images
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'k8s') || github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Set up SKIP_LIST
        if: github.event_name == 'workflow_dispatch'
        run: echo "SKIP_LIST=${{ github.event.inputs.skip_list }}" >> $GITHUB_ENV

      - name: Set up CLUSTER_CONFIG
        run: echo "CLUSTER_CONFIG=${{ github.workspace }}/${{ env.TESTS_REPO }}/e2e-tests/intel-ethernet-operator/ci/test-config-ghactions.yaml" >> $GITHUB_ENV

      - name: Execute E2E test suite
        uses: ./.github/templates/e2e-job-template
        env:
          K8S_BIN: kubectl
          KUBECONFIG: ${{ github.workspace }}/k8s-kubeconfig
        with:
          target: k8s
          secret: ${{ secrets.CICD_K8S_KUBECONFIG }}
          tests_token: ${{ secrets.TESTS_REPO_PAT }}
  # Uncomment when cluster is redeployed, add to line 204
  # test-ocp:
  #   runs-on: [self-hosted, linux]
  #   concurrency:
  #     group: ocp-e2e
  #     cancel-in-progress: false
  #   needs: build-operator-images
  #   if: (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'ocp') || github.event_name != 'workflow_dispatch'
  #   steps:
  #     - name: Checkout operator repository
  #       uses: actions/checkout@v4

  #     - name: Set up SKIP_LIST
  #       if: github.event_name == 'workflow_dispatch'
  #       run: echo "SKIP_LIST=${{ github.event.inputs.skip_list }}" >> $GITHUB_ENV

  #     - name: Set up CLUSTER_CONFIG
  #       run: echo "CLUSTER_CONFIG=${{ github.workspace }}/${{ env.TESTS_REPO }}/e2e-tests/intel-ethernet-operator/ci/test-config-ghactions.yaml" >> $GITHUB_ENV

  #     - name: Execute E2E test suite
  #       uses: ./.github/templates/e2e-job-template
  #       env:
  #         K8S_BIN: oc
  #         KUBECONFIG: ${{ github.workspace }}/ocp-kubeconfig
  #       with:
  #         target: ocp
  #         secret: ${{ secrets.OREGON_OCP_KUBECONFIG }}
  #         tests_token: ${{ secrets.TESTS_REPO_PAT }}

  test-ocp-sn:
    runs-on: [self-hosted, linux]
    concurrency:
      group: ocp-sn-e2e
      cancel-in-progress: false
    needs: build-operator-images
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'ocp-sn') || github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Set up SKIP_LIST
        if: github.event_name == 'workflow_dispatch'
        run: echo "SKIP_LIST=${{ github.event.inputs.skip_list }}" >> $GITHUB_ENV

      - name: Set up CLUSTER_CONFIG
        run: echo "CLUSTER_CONFIG=${{ github.workspace }}/${{ env.TESTS_REPO }}/e2e-tests/intel-ethernet-operator/ci/test-config-ghactions.yaml" >> $GITHUB_ENV

      - name: Execute E2E test suite
        uses: ./.github/templates/e2e-job-template
        env:
          K8S_BIN: oc
          KUBECONFIG: ${{ github.workspace }}/ocp-sn-kubeconfig
        with:
          target: ocp-sn
          secret: ${{ secrets.OREGON_SNO_KUBECONFIG }}
          tests_token: ${{ secrets.TESTS_REPO_PAT }}

  test-stx-sn:
    runs-on: [self-hosted, linux]
    concurrency:
      group: stx-e2e
      cancel-in-progress: false
    needs: build-operator-images
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'stx-sn') || github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout operator repository
        uses: actions/checkout@v4

      - name: Set up SKIP_LIST
        if: github.event_name == 'workflow_dispatch'
        run: echo "SKIP_LIST=${{ github.event.inputs.skip_list }}" >> $GITHUB_ENV

      - name: Set up CLUSTER_CONFIG
        run: echo "CLUSTER_CONFIG=${{ github.workspace }}/${{ env.TESTS_REPO }}/e2e-tests/intel-ethernet-operator/ci/test-config-ghactions.yaml" >> $GITHUB_ENV

      - name: Execute E2E test suite
        uses: ./.github/templates/e2e-job-template
        env:
          K8S_BIN: kubectl
          KUBECONFIG: ${{ github.workspace }}/stx-sn-kubeconfig
        with:
          target: stx-sn
          secret: ${{ secrets.STX9_K8S_KUBECONFIG }}
          tests_token: ${{ secrets.TESTS_REPO_PAT }}

  clear-images-from-harbor:
    runs-on: [self-hosted, linux]
    needs: ["test-k8s", "test-ocp-sn", "test-stx-sn"] # add new cluster targets here
    if: always()
    strategy:
      matrix:
        image_name:
          [
            "manager",
            "daemon",
            "labeler",
            "flowconfig-daemon",
            "catalog",
            "bundle",
          ]
    steps:
      - name: Login to Intel Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.HARBOR_LOGIN }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Conditionally set VERSION
        run: echo "VERSION=v${{ env.VERSION }}" >> $GITHUB_ENV
        if: matrix.image_name == 'catalog' || matrix.image_name == 'bundle'

      - name: Get image digest
        id: get-image-digest
        run: |
          echo "IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' \
            ${{ env.IMAGE_REGISTRY }}/intel-ethernet-operator-${{ matrix.image_name }}:${{ env.VERSION }} | \
            cut -d '@' -f 2)" >> "$GITHUB_OUTPUT"

      - name: Delete image
        run: |
          curl -X DELETE -u '${{ secrets.HARBOR_LOGIN }}:${{ secrets.HARBOR_PASSWORD }}' \
          https://ger-is-registry.caas.intel.com/api/v2.0/projects/cno/repositories/e2e-tests%2Fintel-ethernet-operator-${{ matrix.image_name }}/artifacts/${{ steps.get-image-digest.outputs.IMAGE_DIGEST }}
